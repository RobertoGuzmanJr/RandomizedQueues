import edu.princeton.cs.algs4.StdRandom;

public class RandomizedQueue<Item> implements Iterable<Item> {
	private Item[] _data;
	private int _size;
	private int _capacity = 1;
	
	// construct an empty randomized queue
	public RandomizedQueue()
	{
		_data = (Item[]) new Object[_capacity];
		_size = 0;
	}
	
	// is the queue empty?
	public boolean isEmpty()
	{
		return (_size == 0);
	}
	
	// return the number of items on the queue
	public int size()
	{
		return _size;
	}
	
	// add the item
	public void enqueue(Item item)
	{
		
	}
	
	// remove and return a random item
	public Item dequeue()
	{
		
	}
	
	// return (but do not remove) a random item
	public Item sample()
	{
		
	}
	
	// return an independent iterator over items in random order
	public Iterator<Item> iterator()
	{
		
	}
	
	// unit testing
	public static void main(String[] args)
	{
		
	}
}